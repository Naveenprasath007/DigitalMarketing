# Generated by Django 4.1.9 on 2023-06-03 09:59

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('DigitalMarketing', '0003_delete_authgroup_delete_authgrouppermissions_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaignquestionresponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(db_column='Response', max_length=2000)),
            ],
            options={
                'db_table': 'CampaignQuestionResponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaignvideo',
            fields=[
                ('campaignvideoid', models.CharField(db_column='CampaignVideoID', max_length=255, primary_key=True, serialize=False)),
                ('campaignid', models.CharField(blank=True, db_column='CampaignID', max_length=255, null=True)),
                ('previousvideoid', models.CharField(blank=True, db_column='PreviousVideoID', max_length=255, null=True)),
            ],
            options={
                'db_table': 'CampaignVideo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, max_length='max', null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbApprove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoid', models.CharField(db_column='VideoID', max_length=250)),
                ('videotitle', models.CharField(blank=True, db_column='VideoTitle', max_length=255, null=True)),
                ('videopath', models.CharField(blank=True, db_column='VideoPath', max_length=255, null=True)),
                ('approveddate', models.DateTimeField(blank=True, db_column='ApprovedDate', null=True)),
            ],
            options={
                'db_table': 'tb_Approve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbCampaignquestion',
            fields=[
                ('campaignquestionid', models.CharField(db_column='CampaignQuestionID', max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tb_CampaignQuestion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbQuestion',
            fields=[
                ('questionid', models.CharField(db_column='QuestionID', max_length=255, primary_key=True, serialize=False)),
                ('questiontext', models.CharField(db_column='QuestionText', max_length=2000)),
                ('questionresponse', models.CharField(db_column='QuestionResponse', max_length=4000)),
            ],
            options={
                'db_table': 'tb_Question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoid', models.CharField(db_column='VideoID', max_length=250)),
                ('reason', models.CharField(blank=True, db_column='Reason', max_length=255, null=True)),
                ('videoname', models.CharField(blank=True, db_column='videoName', max_length=255, null=True)),
                ('approver', models.CharField(blank=True, db_column='Approver', max_length=255, null=True)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
            ],
            options={
                'db_table': 'tb_Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbUser',
            fields=[
                ('userid', models.CharField(db_column='UserID', max_length=255, primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=250)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tb_User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbUserrole',
            fields=[
                ('userroleid', models.CharField(db_column='UserRoleID', max_length=255, primary_key=True, serialize=False)),
                ('userrolename', models.CharField(db_column='UserRoleName', max_length=250)),
            ],
            options={
                'db_table': 'tb_UserRole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbVideo',
            fields=[
                ('videoid', models.CharField(db_column='VideoID', max_length=255, primary_key=True, serialize=False)),
                ('previousvideoid', models.CharField(blank=True, db_column='PreviousVideoID', max_length=255, null=True)),
                ('videoname', models.CharField(db_column='VideoName', max_length=2000)),
                ('videopath', models.CharField(db_column='VideoPath', max_length=2000)),
                ('videotranscription', models.TextField(db_column='VideoTranscription')),
            ],
            options={
                'db_table': 'tb_Video',
                'managed': False,
            },
        ),
    ]
